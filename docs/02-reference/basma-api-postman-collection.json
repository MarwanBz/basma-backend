{
  "info": {
    "name": "Basma Backend API - Complete Collection",
    "description": "Complete API collection for Basma Backend with Authentication, User Management, and Super Admin functionality",
    "schema": "https://schema.postman.com/json/collection/v2.1.0/collection.json"
  },
  "auth": {
    "type": "bearer",
    "bearer": [
      {
        "key": "token",
        "value": "{{access_token}}",
        "type": "string"
      }
    ]
  },
  "variable": [
    {
      "key": "base_url",
      "value": "http://localhost:4300",
      "type": "string"
    },
    {
      "key": "access_token",
      "value": "",
      "type": "string",
      "description": "Primary access token for general operations"
    },
    {
      "key": "admin_token",
      "value": "",
      "type": "string",
      "description": "SUPER_ADMIN token for administrative operations"
    },
    {
      "key": "technician_token",
      "value": "",
      "type": "string",
      "description": "TECHNICIAN token for technician operations"
    },
    {
      "key": "customer_token",
      "value": "",
      "type": "string",
      "description": "CUSTOMER token for customer operations"
    },
    {
      "key": "basma_admin_token",
      "value": "",
      "type": "string",
      "description": "BASMA_ADMIN token for building admin operations"
    },
    {
      "key": "my_user_id",
      "value": "",
      "type": "string",
      "description": "Current user ID for filtering operations"
    },
    {
      "key": "technician_user_id",
      "value": "",
      "type": "string",
      "description": "Technician user ID for assignment operations"
    },
    {
      "key": "created_request_id",
      "value": "",
      "type": "string",
      "description": "ID of created request for subsequent operations"
    },
    {
      "key": "comment_id",
      "value": "",
      "type": "string",
      "description": "ID of created comment"
    },
    {
      "key": "refresh_token",
      "value": "",
      "type": "string",
      "description": "Refresh token for token renewal"
    }
  ],
  "item": [
    {
      "name": "üè• Health & Info",
      "item": [
        {
          "name": "Health Check",
          "request": {
            "method": "GET",
            "url": "{{base_url}}/health"
          }
        },
        {
          "name": "API Documentation",
          "request": {
            "method": "GET",
            "url": "{{base_url}}/api-docs"
          }
        }
      ]
    },
    {
      "name": "üîê Authentication",
      "item": [
        {
          "name": "Register",
          "request": {
            "method": "POST",
            "url": "{{base_url}}/api/auth/register",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"Test User\",\n  \"email\": \"test@example.com\",\n  \"password\": \"Test123!\"\n}"
            }
          }
        },
        {
          "name": "Login",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "// Enhanced token management with role-based storage",
                  "if (pm.response.code === 200) {",
                  "    const response = pm.response.json();",
                  "    const token = response.data.accessToken;",
                  "    const refreshToken = response.data.refreshToken;",
                  "    const user = response.data.user;",
                  "",
                  "    // Store tokens based on user role",
                  "    if (user.role === 'SUPER_ADMIN') {",
                  "        pm.environment.set('admin_token', token);",
                  "        pm.environment.set('access_token', token);",
                  "        pm.environment.set('my_user_id', user.id);",
                  "    } else if (user.role === 'TECHNICIAN') {",
                  "        pm.environment.set('technician_token', token);",
                  "        pm.environment.set('access_token', token);",
                  "        pm.environment.set('my_user_id', user.id);",
                  "        pm.environment.set('technician_user_id', user.id);",
                  "    } else if (user.role === 'CUSTOMER') {",
                  "        pm.environment.set('customer_token', token);",
                  "        pm.environment.set('access_token', token);",
                  "        pm.environment.set('my_user_id', user.id);",
                  "    } else if (user.role === 'BASMA_ADMIN') {",
                  "        pm.environment.set('basma_admin_token', token);",
                  "        pm.environment.set('access_token', token);",
                  "        pm.environment.set('my_user_id', user.id);",
                  "    }",
                  "",
                  "    // Store refresh token",
                  "    if (refreshToken) {",
                  "        pm.environment.set('refresh_token', refreshToken);",
                  "    }",
                  "",
                  "    console.log('‚úÖ Token saved for role:', user.role);",
                  "    console.log('üë§ User ID:', user.id);",
                  "    console.log('üîë Token:', token.substring(0, 20) + '...');",
                  "}",
                  "",
                  "// Handle token expiration",
                  "if (pm.response.code === 401) {",
                  "    console.log('‚ùå Token expired - please login again');",
                  "    pm.environment.set('access_token', '');",
                  "}"
                ]
              }
            }
          ],
          "request": {
            "method": "POST",
            "url": "{{base_url}}/api/auth/login",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"email\": \"superadmin@basma.com\",\n  \"password\": \"SuperAdmin123!\"\n}"
            }
          }
        },
        {
          "name": "Forgot Password",
          "request": {
            "method": "POST",
            "url": "{{base_url}}/api/auth/forgot-password",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"email\": \"test@example.com\"\n}"
            }
          }
        },
        {
          "name": "Reset Password",
          "request": {
            "method": "POST",
            "url": "{{base_url}}/api/auth/reset-password",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"token\": \"reset-token-here\",\n  \"newPassword\": \"NewPassword123!\"\n}"
            }
          }
        },
        {
          "name": "Refresh Token",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "// Handle token refresh",
                  "if (pm.response.code === 200) {",
                  "    const response = pm.response.json();",
                  "    const newToken = response.data.accessToken;",
                  "    const newRefreshToken = response.data.refreshToken;",
                  "",
                  "    // Update the appropriate token based on current role",
                  "    const currentToken = pm.environment.get('access_token');",
                  "",
                  "    if (currentToken === pm.environment.get('admin_token')) {",
                  "        pm.environment.set('admin_token', newToken);",
                  "    } else if (currentToken === pm.environment.get('technician_token')) {",
                  "        pm.environment.set('technician_token', newToken);",
                  "    } else if (currentToken === pm.environment.get('customer_token')) {",
                  "        pm.environment.set('customer_token', newToken);",
                  "    } else if (currentToken === pm.environment.get('basma_admin_token')) {",
                  "        pm.environment.set('basma_admin_token', newToken);",
                  "    }",
                  "",
                  "    pm.environment.set('access_token', newToken);",
                  "    if (newRefreshToken) {",
                  "        pm.environment.set('refresh_token', newRefreshToken);",
                  "    }",
                  "",
                  "    console.log('‚úÖ Token refreshed successfully');",
                  "    console.log('üîë New token:', newToken.substring(0, 20) + '...');",
                  "}",
                  "",
                  "if (pm.response.code === 401) {",
                  "    console.log('‚ùå Refresh token expired - please login again');",
                  "    pm.environment.set('access_token', '');",
                  "    pm.environment.set('refresh_token', '');",
                  "}"
                ]
              }
            }
          ],
          "request": {
            "method": "POST",
            "url": "{{base_url}}/api/auth/refresh",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"refreshToken\": \"{{refresh_token}}\"\n}"
            }
          }
        },
        {
          "name": "Clear All Tokens",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "// Clear all stored tokens",
                  "pm.environment.set('access_token', '');",
                  "pm.environment.set('admin_token', '');",
                  "pm.environment.set('technician_token', '');",
                  "pm.environment.set('customer_token', '');",
                  "pm.environment.set('basma_admin_token', '');",
                  "pm.environment.set('refresh_token', '');",
                  "pm.environment.set('my_user_id', '');",
                  "pm.environment.set('technician_user_id', '');",
                  "pm.environment.set('created_request_id', '');",
                  "pm.environment.set('comment_id', '');",
                  "",
                  "console.log('‚úÖ All tokens cleared');"
                ]
              }
            }
          ],
          "request": {
            "method": "GET",
            "url": "{{base_url}}/api/auth/logout",
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{access_token}}"
                }
              ]
            }
          }
        }
      ]
    },
    {
      "name": "üë§ User Management",
      "item": [
        {
          "name": "Get Current User",
          "request": {
            "method": "GET",
            "url": "{{base_url}}/api/users/me",
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{access_token}}"
                }
              ]
            }
          }
        },
        {
          "name": "Update Current User",
          "request": {
            "method": "PUT",
            "url": "{{base_url}}/api/users/me",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{access_token}}"
                }
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"Updated Name\"\n}"
            }
          }
        }
      ]
    },
    {
      "name": "üëë Super Admin",
      "item": [
        {
          "name": "üìä System Management",
          "item": [
            {
              "name": "Get System Stats",
              "request": {
                "method": "GET",
                "url": "{{base_url}}/api/super-admin/system/stats",
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{access_token}}"
                    }
                  ]
                }
              }
            }
          ]
        },
        {
          "name": "üë• User Management",
          "item": [
            {
              "name": "Get All Users",
              "request": {
                "method": "GET",
                "url": "{{base_url}}/api/super-admin/users",
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{access_token}}"
                    }
                  ]
                }
              }
            },
            {
              "name": "Get User by ID",
              "request": {
                "method": "GET",
                "url": "{{base_url}}/api/super-admin/users/:id",
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{access_token}}"
                    }
                  ]
                }
              }
            },
            {
              "name": "Create User",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "if (pm.response.code === 201) {",
                      "    const response = pm.response.json();",
                      "    pm.environment.set('created_user_id', response.data.id);",
                      "    console.log('User created with ID:', response.data.id);",
                      "}"
                    ]
                  }
                }
              ],
              "request": {
                "method": "POST",
                "url": "{{base_url}}/api/super-admin/users",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{access_token}}"
                    }
                  ]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"name\": \"New User\",\n  \"email\": \"newuser@example.com\",\n  \"password\": \"NewUser123!\",\n  \"role\": \"CUSTOMER\"\n}"
                }
              }
            },
            {
              "name": "Update User",
              "request": {
                "method": "PUT",
                "url": "{{base_url}}/api/super-admin/users/:id",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{access_token}}"
                    }
                  ]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"name\": \"Updated User Name\",\n  \"role\": \"TECHNICIAN\"\n}"
                }
              }
            },
            {
              "name": "Delete User",
              "request": {
                "method": "DELETE",
                "url": "{{base_url}}/api/super-admin/users/:id",
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{access_token}}"
                    }
                  ]
                }
              }
            }
          ]
        },
        {
          "name": "üìã Bulk Operations",
          "item": [
            {
              "name": "Bulk Create Users",
              "request": {
                "method": "POST",
                "url": "{{base_url}}/api/super-admin/users/bulk",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{access_token}}"
                    }
                  ]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"users\": [\n    {\n      \"name\": \"Bulk User 1\",\n      \"email\": \"bulk1@example.com\",\n      \"password\": \"BulkUser123!\",\n      \"role\": \"CUSTOMER\"\n    },\n    {\n      \"name\": \"Bulk User 2\",\n      \"email\": \"bulk2@example.com\",\n      \"password\": \"BulkUser123!\",\n      \"role\": \"TECHNICIAN\"\n    }\n  ]\n}"
                }
              }
            },
            {
              "name": "Bulk Update Users",
              "request": {
                "method": "PUT",
                "url": "{{base_url}}/api/super-admin/users/bulk",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{access_token}}"
                    }
                  ]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"updates\": [\n    {\n      \"id\": \"user-id-1\",\n      \"role\": \"BASMA_ADMIN\"\n    },\n    {\n      \"id\": \"user-id-2\",\n      \"name\": \"Updated Name\"\n    }\n  ]\n}"
                }
              }
            },
            {
              "name": "Bulk Delete Users",
              "request": {
                "method": "DELETE",
                "url": "{{base_url}}/api/super-admin/users/bulk",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{access_token}}"
                    }
                  ]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"userIds\": [\"user-id-1\", \"user-id-2\"]\n}"
                }
              }
            }
          ]
        },
        {
          "name": "üîí Security & Audit",
          "item": [
            {
              "name": "Get Security Logs",
              "request": {
                "method": "GET",
                "url": "{{base_url}}/api/super-admin/security/logs",
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{access_token}}"
                    }
                  ]
                }
              }
            },
            {
              "name": "Get Audit Logs",
              "request": {
                "method": "GET",
                "url": "{{base_url}}/api/super-admin/audit/logs",
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{access_token}}"
                    }
                  ]
                }
              }
            }
          ]
        }
      ]
    },
    {
      "name": "üìä Monitoring",
      "item": [
        {
          "name": "Get Metrics",
          "request": {
            "method": "GET",
            "url": "{{base_url}}/api/monitoring/metrics"
          }
        }
      ]
    },
    {
      "name": "üìã Request Management",
      "description": "Complete maintenance request lifecycle management with role-based access control",
      "item": [
        {
          "name": "üìù Request Operations",
          "item": [
            {
              "name": "Create Request (Customer/Technician)",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "if (pm.response.code === 201) {",
                      "    const response = pm.response.json();",
                      "    pm.environment.set('created_request_id', response.data.id);",
                      "    console.log('Request created with ID:', response.data.id);",
                      "}"
                    ]
                  }
                }
              ],
              "request": {
                "method": "POST",
                "url": "{{base_url}}/api/requests",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{access_token}}"
                    }
                  ]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"title\": \"Fix broken door in Building A\",\n  \"description\": \"The main entrance door to Building A is not closing properly. It appears to be an issue with the door mechanism.\",\n  \"priority\": \"MEDIUM\",\n  \"categoryId\": 1,\n  \"location\": \"Main Entrance\",\n  \"building\": \"Building A\",\n  \"specificLocation\": \"Ground Floor, North Wing\"\n}"
                }
              }
            },
            {
              "name": "Get All Requests (Admin/Technician)",
              "request": {
                "method": "GET",
                "url": "{{base_url}}/api/requests",
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{access_token}}"
                    }
                  ]
                }
              }
            },
            {
              "name": "Get My Requests (Customer)",
              "request": {
                "method": "GET",
                "url": "{{base_url}}/api/requests?requestedById={{my_user_id}}",
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{access_token}}"
                    }
                  ]
                }
              }
            },
            {
              "name": "Get Request by ID",
              "request": {
                "method": "GET",
                "url": "{{base_url}}/api/requests/{{created_request_id}}",
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{access_token}}"
                    }
                  ]
                }
              }
            },
            {
              "name": "Update Request",
              "request": {
                "method": "PUT",
                "url": "{{base_url}}/api/requests/{{created_request_id}}",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{access_token}}"
                    }
                  ]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"title\": \"Fix broken door - Updated\",\n  \"description\": \"The main entrance door to Building A is not closing properly. Updated description with more details.\",\n  \"priority\": \"HIGH\",\n  \"estimatedCost\": 250.00\n}"
                }
              }
            },
            {
              "name": "Delete Request (Admin/Creator)",
              "request": {
                "method": "DELETE",
                "url": "{{base_url}}/api/requests/{{created_request_id}}",
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{access_token}}"
                    }
                  ]
                }
              }
            }
          ]
        },
        {
          "name": "üí¨ Comments",
          "item": [
            {
              "name": "Add Comment to Request",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "if (pm.response.code === 201) {",
                      "    const response = pm.response.json();",
                      "    pm.environment.set('comment_id', response.data.id);",
                      "    console.log('Comment created with ID:', response.data.id);",
                      "}"
                    ]
                  }
                }
              ],
              "request": {
                "method": "POST",
                "url": "{{base_url}}/api/requests/{{created_request_id}}/comments",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{access_token}}"
                    }
                  ]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"text\": \"I've inspected the door and found that the hinges need replacement. This is a structural issue.\",\n  \"isInternal\": false\n}"
                }
              }
            },
            {
              "name": "Add Internal Comment (Technician)",
              "request": {
                "method": "POST",
                "url": "{{base_url}}/api/requests/{{created_request_id}}/comments",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{technician_token}}"
                    }
                  ]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"text\": \"This requires specialized tools. Need to order replacement hinges from supplier.\",\n  \"isInternal\": true\n}"
                }
              }
            }
          ]
        },
        {
          "name": "üìä Status Management",
          "item": [
            {
              "name": "Update Request Status (Technician)",
              "request": {
                "method": "PATCH",
                "url": "{{base_url}}/api/requests/{{created_request_id}}/status",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{technician_token}}"
                    }
                  ]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"status\": \"IN_PROGRESS\",\n  \"reason\": \"Starting work on the door repair\"\n}"
                }
              }
            },
            {
              "name": "Complete Request (Technician)",
              "request": {
                "method": "PATCH",
                "url": "{{base_url}}/api/requests/{{created_request_id}}/status",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{technician_token}}"
                    }
                  ]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"status\": \"COMPLETED\",\n  \"reason\": \"Door repair completed successfully\"\n}"
                }
              }
            },
            {
              "name": "Close Request (Admin)",
              "request": {
                "method": "PATCH",
                "url": "{{base_url}}/api/requests/{{created_request_id}}/status",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{admin_token}}"
                    }
                  ]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"status\": \"CLOSED\",\n  \"reason\": \"Work verified and completed\"\n}"
                }
              }
            }
          ]
        },
        {
          "name": "üë∑ Assignment Management",
          "item": [
            {
              "name": "Assign Request (Admin)",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "if (pm.response.code === 200) {",
                      "    console.log('Request assigned successfully');",
                      "}"
                    ]
                  }
                }
              ],
              "request": {
                "method": "POST",
                "url": "{{base_url}}/api/requests/{{created_request_id}}/assign",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{admin_token}}"
                    }
                  ]
                },
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"assignedToId\": \"{{technician_user_id}}\",\n  \"reason\": \"Assigning to experienced technician for door repair\"\n}"
                }
              }
            },
            {
              "name": "Self-Assign Request (Technician)",
              "request": {
                "method": "POST",
                "url": "{{base_url}}/api/requests/{{created_request_id}}/self-assign",
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{technician_token}}"
                    }
                  ]
                }
              }
            }
          ]
        },
        {
          "name": "üîç Advanced Filtering",
          "item": [
            {
              "name": "Filter by Status",
              "request": {
                "method": "GET",
                "url": "{{base_url}}/api/requests?status=SUBMITTED&sortBy=createdAt&sortOrder=desc",
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{access_token}}"
                    }
                  ]
                }
              }
            },
            {
              "name": "Filter by Priority",
              "request": {
                "method": "GET",
                "url": "{{base_url}}/api/requests?priority=HIGH&building=Building%20A",
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{access_token}}"
                    }
                  ]
                }
              }
            },
            {
              "name": "Search Requests",
              "request": {
                "method": "GET",
                "url": "{{base_url}}/api/requests?search=door&limit=5",
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{access_token}}"
                    }
                  ]
                }
              }
            },
            {
              "name": "Pagination Example",
              "request": {
                "method": "GET",
                "url": "{{base_url}}/api/requests?page=2&limit=10&sortBy=priority&sortOrder=desc",
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{access_token}}"
                    }
                  ]
                }
              }
            }
          ]
        }
      ]
    },
    {
      "name": "üß™ Test Authorization",
      "description": "Test endpoints to verify role-based access control",
      "item": [
        {
          "name": "‚ùå Unauthorized Super Admin Access",
          "request": {
            "method": "GET",
            "url": "{{base_url}}/api/super-admin/users",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer invalid-token"
              }
            ]
          }
        },
        {
          "name": "‚ùå No Token Super Admin Access",
          "request": {
            "method": "GET",
            "url": "{{base_url}}/api/super-admin/users"
          }
        }
      ]
    }
  ]
}
